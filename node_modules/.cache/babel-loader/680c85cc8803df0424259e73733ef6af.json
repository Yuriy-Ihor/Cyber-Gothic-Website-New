{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\38067\\\\Desktop\\\\cyber-gothica-website\\\\src\\\\components\\\\lens-blink.js\";\nimport React, { Fragment } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LensBlinkJSX(JSXElement, origin) {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.animate_scroll = () => {\n        if (!this.animation_running) {\n          this.animation_running = true;\n          this.animation_loop();\n        }\n      };\n\n      this.animation_loop = () => {\n        console.log(\"Hello world\");\n        requestAnimationFrame(this.animation_loop);\n      };\n\n      this.state = {\n        start_position: null,\n        WrappedJSXElement: /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 36\n        }, void 0)\n      };\n    }\n\n    componentDidMount() {\n      this.last_offset = 0;\n      this.animation_running = false;\n      this.wrappedJSXElement = null;\n      const ref = /*#__PURE__*/React.createRef();\n      const JSXElementWithRef = /*#__PURE__*/React.cloneElement(JSXElement, { ...JSXElement.props,\n        ref: ref\n      });\n      this.setState({\n        WrappedJSXElement: JSXElementWithRef\n      }, () => {\n        this.setState({\n          start_position: ref.current.offsetTop\n        }, () => {\n          this.wrappedJSXElement = ref;\n          document.addEventListener(\"scroll\", this.animate_scroll);\n        });\n      });\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: this.state.WrappedJSXElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    }\n\n  };\n}\n\n_c = LensBlinkJSX;\nexport default LensBlinkJSX;\n\nvar _c;\n\n$RefreshReg$(_c, \"LensBlinkJSX\");","map":{"version":3,"sources":["C:/Users/38067/Desktop/cyber-gothica-website/src/components/lens-blink.js"],"names":["React","Fragment","LensBlinkJSX","JSXElement","origin","Component","constructor","props","animate_scroll","animation_running","animation_loop","console","log","requestAnimationFrame","state","start_position","WrappedJSXElement","componentDidMount","last_offset","wrappedJSXElement","ref","createRef","JSXElementWithRef","cloneElement","setState","current","offsetTop","document","addEventListener","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,YAAT,CAAsBC,UAAtB,EAAkCC,MAAlC,EAA0C;AACtC,SAAO,cAAcJ,KAAK,CAACK,SAApB,CAA8B;AACjCC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,YAAMA,KAAN;;AADe,WA+BnBC,cA/BmB,GA+BF,MAAM;AACnB,YAAI,CAAC,KAAKC,iBAAV,EAA6B;AACzB,eAAKA,iBAAL,GAAyB,IAAzB;AACA,eAAKC,cAAL;AACH;AACJ,OApCkB;;AAAA,WAsCnBA,cAtCmB,GAsCF,MAAM;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEAC,QAAAA,qBAAqB,CAAC,KAAKH,cAAN,CAArB;AACH,OA1CkB;;AAGf,WAAKI,KAAL,GAAa;AACTC,QAAAA,cAAc,EAAE,IADP;AAETC,QAAAA,iBAAiB,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAFV,OAAb;AAIH;;AAEDC,IAAAA,iBAAiB,GAAG;AAChB,WAAKC,WAAL,GAAmB,CAAnB;AACA,WAAKT,iBAAL,GAAyB,KAAzB;AACA,WAAKU,iBAAL,GAAyB,IAAzB;AAEA,YAAMC,GAAG,gBAAGpB,KAAK,CAACqB,SAAN,EAAZ;AAEA,YAAMC,iBAAiB,gBAAGtB,KAAK,CAACuB,YAAN,CACtBpB,UADsB,EAEtB,EAAE,GAAGA,UAAU,CAACI,KAAhB;AAAuBa,QAAAA,GAAG,EAAEA;AAA5B,OAFsB,CAA1B;AAKA,WAAKI,QAAL,CAAc;AACVR,QAAAA,iBAAiB,EAAEM;AADT,OAAd,EAEG,MAAM;AACL,aAAKE,QAAL,CAAc;AAAET,UAAAA,cAAc,EAAEK,GAAG,CAACK,OAAJ,CAAYC;AAA9B,SAAd,EAAyD,MAAM;AAC3D,eAAKP,iBAAL,GAAyBC,GAAzB;AACAO,UAAAA,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,EAAoC,KAAKpB,cAAzC;AACH,SAHD;AAIH,OAPD;AAQH;;AAeDqB,IAAAA,MAAM,GAAG;AACL,0BACI,QAAC,QAAD;AAAA,kBACK,KAAKf,KAAL,CAAWE;AADhB;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;;AAnDgC,GAArC;AAqDH;;KAtDQd,Y;AAwDT,eAAeA,YAAf","sourcesContent":["import React, { Fragment } from 'react';\r\n\r\nfunction LensBlinkJSX(JSXElement, origin) {\r\n    return class extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n\r\n            this.state = {\r\n                start_position: null,\r\n                WrappedJSXElement: <Fragment></Fragment>\r\n            }\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.last_offset = 0;\r\n            this.animation_running = false;\r\n            this.wrappedJSXElement = null;\r\n\r\n            const ref = React.createRef();\r\n\r\n            const JSXElementWithRef = React.cloneElement(\r\n                JSXElement,\r\n                { ...JSXElement.props, ref: ref },\r\n            )\r\n\r\n            this.setState({\r\n                WrappedJSXElement: JSXElementWithRef\r\n            }, () => {\r\n                this.setState({ start_position: ref.current.offsetTop }, () => {\r\n                    this.wrappedJSXElement = ref;\r\n                    document.addEventListener(\"scroll\", this.animate_scroll);\r\n                });\r\n            });\r\n        }\r\n\r\n        animate_scroll = () => {\r\n            if (!this.animation_running) {\r\n                this.animation_running = true;\r\n                this.animation_loop();\r\n            }\r\n        }\r\n\r\n        animation_loop = () => {\r\n            console.log(\"Hello world\");\r\n\r\n            requestAnimationFrame(this.animation_loop);\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Fragment>\r\n                    {this.state.WrappedJSXElement}\r\n                </Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default LensBlinkJSX;"]},"metadata":{},"sourceType":"module"}